<UserControl x:Class="Landing.Win.LanControls.ServicesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Landing.Win.LanControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <SolidColorBrush x:Key="Blue" Color="#053a62"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="NavajoWhite"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="NavajoWhite"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="NavajoWhite"/>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="Black"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" Padding="{TemplateBinding Padding}" Margin="0" Background="Transparent" CornerRadius="10"  >
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Data="M 1,1.5 L 6.3,8 L 12,1.5"  HorizontalAlignment="Center" SnapsToDevicePixels="false" StrokeThickness="2" Stroke="White" VerticalAlignment="Center"/>
                                <ContentPresenter x:Name="text" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,6.5 L 6.3,1 L 12,6.5"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Blue}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       
       
       
        <Style x:Key="CustomExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource Blue}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="{StaticResource Blue}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="0" MinWidth="0" Margin="1" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom"  Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="40,10,10,10" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
   
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Margin="10" BorderBrush="#333" BorderThickness="0, 0, 0, 1">
            <TextBlock Text="{Binding HeadText}" FontSize="36" Foreground="#333"/>
        </Border>

        <Grid x:Name="listView" Grid.Row="1" Visibility="{Binding Path=ListVisible}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ListBox ItemsSource="{Binding ServicesList}" Grid.Row="0" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="White" Margin="0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="700"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Expander Style="{DynamicResource CustomExpander}" Padding="10" Header="{Binding Name}" Width="700" Margin="0,8,0,0"  >
                                <StackPanel>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Description}"/>

                                    <TextBox Text="{Binding Id}" x:Name="idtext" Visibility="Collapsed"/>
                                </StackPanel>
                            </Expander>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5"  VerticalAlignment="Top" >
                                <Button Style="{StaticResource RoundBtn}" Command="{Binding Path=DataContext.EditItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding ElementName=idtext}" HorizontalAlignment="Right" >
                                    <Button.ContentTemplate>
                                        <DataTemplate   >
                                            <Image Source="/Images/ic_edit.png" Width="20" Height="20" />
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                                <Button Style="{StaticResource RoundBtn}" HorizontalAlignment="Right" Command="{Binding Path=DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding ElementName=idtext}">
                                    <Button.ContentTemplate>
                                        <DataTemplate   >
                                            <Image Source="/Images/ic_delete.png" Width="20" Height="20" />
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                            </StackPanel>
                        </Grid>

                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <Button Content="Добавить проект" Grid.Row="1" HorizontalAlignment="Right" Style="{StaticResource BlueButton}" Command="{Binding AddItemCommand}"/>
        </Grid>
        <Grid x:Name="edtiView" Grid.Row="1" Visibility="{Binding Path=EditVisivle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Text="Название услуги" Foreground="#333" Margin="5"/>
                    <TextBox  Padding="5">
                        <TextBox.Text>
                            <Binding Path="Name" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Описание услуги" Foreground="#333" Margin="5"/>
                    <TextBox  Grid.Row="1" Padding="5" TextWrapping="Wrap">
                        <TextBox.Text>
                            <Binding Path="Description" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </Grid>
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <Button Content="Сохранить" Grid.Row="1" IsEnabled="{Binding SaveButtonEnabled}" HorizontalAlignment="Right" Style="{StaticResource BlueButton}" Margin="10" Command="{Binding SaveItemCommant}"/>
                <Button Content="Отмена" Grid.Row="1"  HorizontalAlignment="Right" Style="{StaticResource BlueButton}" Margin="10" Command="{Binding CancelCommand}" />

            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
