<Window x:Class="ClientBank.View.AccountView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClientBank.View"
        xmlns:mycom="clr-namespace:ClientBank.Commands"
        xmlns:control="clr-namespace:ClientBank.MyControl"
        mc:Ignorable="d"
        Title="Банк" MinHeight="400" MinWidth="900" Height="450" Width="1000" Icon="/Images/icon.png">
    <Window.CommandBindings>
        <CommandBinding x:Name="MessagesCom" Command="mycom:AccountCommands.AddAccount" />
        <CommandBinding x:Name="OpenHistory" Command="mycom:AccountCommands.OpenHistorys"/>
        <CommandBinding x:Name="OpenCustom" Command="mycom:AccountCommands.OpenCustomers"/>
        <CommandBinding x:Name="Transfer" Command="mycom:AccountCommands.TramsferMoneyCommand"/>
        <CommandBinding x:Name="CloseAccount" Command="mycom:AccountCommands.CloseAccountCommand"/>
        <CommandBinding x:Name="Replenish" Command="mycom:AccountCommands.ReplenishAccountCommand"/>
        <CommandBinding x:Name="Repayment" Command="mycom:AccountCommands.RepaymentCommandButton"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0"   Style="{StaticResource Menu}">
            <MenuItem  Style="{StaticResource MenuItemBaseStyle}" Header="Клиенты" Command="mycom:AccountCommands.OpenCustomers" Background="{x:Null}" >
                <MenuItem.Icon>
                    <Image Source="/Images/manager.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem  Header="История операций" Style="{StaticResource MenuItemBaseStyle}" Command="mycom:AccountCommands.OpenHistorys">
                <MenuItem.Icon>
                    <Image Source="/Images/ic_history.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Style="{StaticResource MenuItemBaseStyle}" Header="Экспорт счетов">
                <MenuItem Style="{StaticResource MenuItemBaseStyle}" Header="Экспорт Xlsx" Command="{Binding ExportToXlsx}">
                    <MenuItem.Icon>
                        <Image Source="/Images/ic_excel.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Style="{StaticResource MenuItemBaseStyle}" Header="Экспорт PDF" Command="{Binding ExportToPdf}">
                    <MenuItem.Icon>
                        <Image Source="/Images/ic_pdf.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"  BorderBrush="#FF35ACD8" BorderThickness="0,0,0.6,0">
                <Grid  >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBox Style="{StaticResource TextBoxSearch}"  Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"  />

                    <ListView x:Name="listCustomer" Grid.Row="1" BorderBrush="{Binding BorderChekedColor}" BorderThickness="0, 0, 0, 4" ItemsSource="{Binding ClientsList}" IsSynchronizedWithCurrentItem="True" >
                            <ListView.ItemTemplate >
                                <DataTemplate>
                                    <Border BorderThickness="3,0,0,0" BorderBrush="{Binding ColorList}">
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" >
                                            <TextBlock FontWeight="Bold"  Margin="3" Text="{Binding Path=ClientName}" VerticalAlignment="Center" />
                                            <TextBlock FontWeight="DemiBold" Margin="3" Text="{Binding CityName}" Foreground="Gray"/>
                                        </StackPanel>
                                    </Border>


                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    <Border Visibility="{Binding ClientRedVisibility}"  Grid.Row="1" BorderBrush="#FFE43B3B" BorderThickness="0,3,0,3" ></Border>
                   
                </Grid>
            </Border>

            <Grid Grid.Column="1" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

               
                <TabControl  Grid.Row="0"  x:Name="AccountControlTab" BorderThickness="0">
                    <TabControl.Resources>
                        <Style TargetType="TabItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Border Name="Border" BorderThickness="1,1,1,1"  CornerRadius="15,0,15,0"  BorderBrush="#FF0BBBC3"  Margin="2,2">
                                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,3"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#FF0BBBC3" />
                                                <Setter Property="FontSize" Value="16"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                                <Setter Property="FontSize" Value="16"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            </Style>
                    </TabControl.Resources>
                    <TabItem Header="Все">
                        <control:AccountControl Grid.Row="1" />
                    </TabItem>
                    <TabItem Header="Счета">
                        <control:PersonalControl Grid.Row="1"/>
                    </TabItem>
                    <TabItem Header="Вклады">
                        <control:DepositControl Grid.Row="1"/>
                    </TabItem>
                    <TabItem Header="Кредиты">
                        <control:CreditControl Grid.Row="1"/>
                    </TabItem>
                   
                </TabControl>

                <!--<control:AccountControl Grid.Row="1"/>-->
                <Border Grid.Row="1" CornerRadius="10,10,0,0" Visibility="{Binding ErroreVisible}" Background="#FFD34444">
                    <TextBlock Margin="5"  Text="{Binding ErrorMessage}" Foreground="White" FontWeight="Bold"/>
                </Border>
                <StackPanel Orientation="Horizontal" Grid.Row="2">
                    <Button   Template="{StaticResource ButtonTemplate}" Width="35" Height="35" Command="{Binding FirstCommand}"
                          CommandParameter="{Binding ElementName=listAccount, Path=SelectedItem}"
                          IsEnabled="{Binding EnabledPrevious}">
                        <Image Source="/Images/ic_first.png" />

                    </Button>
                    <Button Template="{StaticResource ButtonTemplate}" Width="35" Height="35" Command="{Binding PreviousCommand}"
                        CommandParameter="{Binding ElementName=listAccount, Path=SelectedItem}"
                        IsEnabled="{Binding EnabledPrevious}">
                        <Image Source="/Images/ic_left.png"/>
                    </Button>
                    <TextBlock TextAlignment="Center" Width="150" Text="{Binding AccountPosition, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBlock}"/>
                    <Button Template="{StaticResource ButtonTemplate}" Width="35" Height="35" Command="{Binding NextCommand}"
                        IsEnabled="{Binding EnabledNext}"
                        CommandParameter="{Binding ElementName=listAccount, Path=SelectedItem}">
                        <Image Source="/Images/ic_right.png"/>
                    </Button>
                    <Button Template="{StaticResource ButtonTemplate}" Width="35" Height="35" Command="{Binding LastCommand}"
                        CommandParameter="{Binding ElementName=listAccount, Path=SelectedItem}"
                        IsEnabled="{Binding EnabledNext}">
                        <Image Source="/Images/ic_last.png"/>
                    </Button>
                    <Button IsEnabled="{Binding Path=ProgressBarItem.ButtonState}" Template="{StaticResource ButtonTemplate}" Width="35" Height="35" Command="mycom:AccountCommands.AddAccount"
                        CommandParameter="{Binding ElementName=listCustomer, Path=SelectedItem}">
                        <Image Source="/Images/ic_add.png"/>
                    </Button>
                    <Border BorderThickness="0,0,0,4"  Padding="5,0,20,0" BorderBrush="{Binding BorderChekedColor}" >
                        <StackPanel Orientation="Horizontal">
                            
                            <ToggleButton Style="{StaticResource AnimatedSwitch}" IsChecked="{Binding CheckFilter}" Margin="0 0 15 0"/>
                            <TextBlock Style="{StaticResource TextBlock}" Text="{Binding FilterButtonText}" FontSize="14" Padding="5 0 5 0"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>


        </Grid>
        <StatusBar Grid.Row="2" Background="#FF2F82C7" >
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="33*"/>
                            <ColumnDefinition Width="33*"/>
                            <ColumnDefinition Width="33*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <TextBlock Text="Отдел: " Foreground="White" />
                    <ComboBox MinWidth="150" Style="{StaticResource ComboBoxMenu}"   ItemsSource="{Binding Path=GetStatuses}" DisplayMemberPath="Status" 
                  SelectedValuePath="Id" SelectedValue="{Binding Path=StatusFilter, UpdateSourceTrigger=PropertyChanged}"  />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=ProgressBarItem.ProgressName, Mode=OneWay}" Foreground="White" Margin="5,0,10,0"/>
                    <ProgressBar BorderThickness="0" Background="Transparent" Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal" 
                                  Value="{Binding  Path=ProgressBarItem.CurrentValue, Mode=OneWay}" 
                                  Minimum="{Binding Path=ProgressBarItem.MinValue, Mode=OneWay}" 
                                  Maximum="{Binding Path=ProgressBarItem.MaxValue, Mode=OneWay}"  Width="150" Height="20" >
                        <ProgressBar.Foreground>
                            <SolidColorBrush Color="#FF09D188"/>
                        </ProgressBar.Foreground>

                        <ProgressBar.Style>
                            <Style>
                                <Setter Property="Panel.Background" Value="#FFFFF9F1"/>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                </StackPanel>
               
            </StatusBarItem>
           
           </StatusBar>
    </Grid>
</Window>
